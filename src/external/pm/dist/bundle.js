var PMAnalyzer =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./hook.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./Analyzer.js":
/*!*********************!*\
  !*** ./Analyzer.js ***!
  \*********************/
/*! exports provided: analyzeHandler, isNativeFunc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"analyzeHandler\", function() { return analyzeHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNativeFunc\", function() { return isNativeFunc; });\n/* harmony import */ var _ForcedRun_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ForcedRun.js */ \"./ForcedRun.js\");\n/* harmony import */ var _evaluationHelper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./evaluationHelper.js */ \"./evaluationHelper.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.js */ \"./util.js\");\n/* harmony import */ var _ExploitGenerator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ExploitGenerator.js */ \"./ExploitGenerator.js\");\n/*\nCopyright (C) 2020  Marius Steffens, CISPA\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\n// global mapping from already instrumented functions to their instrumented counterparts\nlet fun_mapping = new Map();\n// selectively enable/disable proxying of document.cookie localStorage values\nlet shouldPrivacyThings = false;\n\n\nfunction checkParamForProxies(e, sinkID, indizes = undefined, manual = false) {\n  let args = e.arguments;\n  if (indizes === undefined) {\n    indizes = args.keys();\n  }\n  for (let i of indizes) {\n    if (args.length > i) {\n      if (args[i] && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(args[i])) {\n        if (!manual)\n          e.instance.ForceExecution.emitSinkAccess(args[i], sinkID, i, e.hash);\n        else\n          e.instance.ForceExecution.emitSinkAccess(args[i], sinkID, i, e.hash, 'manual');\n      }\n    }\n  }\n}\n\nfunction parseCookies() {\n  let c_st = document.cookie;\n  let parsed = {};\n  for (let splitted of c_st.split(';')) {\n    if (splitted.indexOf('=') === -1) {\n      continue\n    }\n    let [key, val] = splitted.split('=');\n    parsed[key.trim()] = val.trim()\n  }\n  return parsed;\n}\n\nfunction extractConstraintFromProxy(p) {\n  let constraint;\n  if (p.__is_real_value) {\n    constraint = {ops: Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"deepClone\"])(p.__get_ops), value: p.__get_identifier, isRealValue: true, val: p.__get_real_obj};\n  } else {\n    constraint = {ops: Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"deepClone\"])(p.__get_ops), identifier: p.__get_identifier};\n  }\n  return constraint;\n}\n\nfunction checkForFlowToSink(e) {\n  // references to other windows do not yet work.\n  if (e.call === document.write) {\n    checkParamForProxies(e, 'document.write');\n  }\n  if (Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"getFunctionString\"])(e.call) === \"function write() { [native code] }\") {\n    checkParamForProxies(e, 'document.write');\n  }\n  if (e.call === eval) {\n    checkParamForProxies(e, 'eval', [0]);\n  }\n  if (e.call === setTimeout) {\n    checkParamForProxies(e, 'setTimeout', [0]);\n  }\n  if (e.call === setInterval) {\n    checkParamForProxies(e, 'setInterval', [0]);\n  }\n  if (e.callee === 'html') {\n    checkParamForProxies(e, 'jquery', [0]);\n  }\n  if (e.call === Element.prototype.insertAdjacentHTML) {\n    checkParamForProxies(e, 'insertAdjacentHTML', [1]);\n  }\n  if (e.callee === 'postMessage') {\n    if (e.arguments.length && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.arguments[0]) && (e.arguments[0].__get_identifier.startsWith('cookie') || e.arguments[0].__get_identifier.startsWith('storage'))) {\n      checkParamForProxies(e, 'postMessageLeak', [0], true);\n    } else {\n      checkParamForProxies(e, 'postMessageRelay', [0], true);\n    }\n  }\n  if (e.call === localStorage.setItem) {\n    if (e.arguments.length === 2 && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.arguments[0]) && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.arguments[1])) {\n      e.instance.ForceExecution.emitStorageAccess(e.arguments[0], e.arguments[1], e.hash)\n    }\n\n  }\n}\n\nfunction generateBinaryResult(left, right, op, type, forced_execution) {\n  let isLeftProxy = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(left);\n  let isRightProxy = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(right);\n  if (isLeftProxy || isRightProxy) {\n    let identifier;\n    let last_ops;\n    let l_value = left;\n    let r_value = right;\n    let res_value, side, isRealValue;\n    if (isLeftProxy && isRightProxy) {\n      identifier = l_value.__get_identifier;\n      isRealValue = l_value.__is_real_value;\n      last_ops = l_value.__get_ops;\n      res_value = _evaluationHelper_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].evalBinary(op, l_value.__get_real_obj, r_value.__get_real_obj);\n      r_value = extractConstraintFromProxy(r_value);\n      side = 'both';\n    } else if (isLeftProxy) {\n      identifier = l_value.__get_identifier;\n      last_ops = l_value.__get_ops;\n      isRealValue = l_value.__is_real_value;\n      l_value = l_value.__get_real_obj;\n      res_value = _evaluationHelper_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].evalBinary(op, l_value, r_value);\n      side = 'left';\n      if (last_ops.length < 2)\n        forced_execution.addTypeInfo(identifier, typeof r_value)\n    } else {\n      identifier = r_value.__get_identifier;\n      last_ops = r_value.__get_ops;\n      isRealValue = r_value.__is_real_value;\n      r_value = r_value.__get_real_obj;\n      res_value = _evaluationHelper_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].evalBinary(op, l_value, r_value);\n      if (last_ops.length < 2)\n        forced_execution.addTypeInfo(identifier, typeof l_value);\n      side = 'right';\n    }\n    let new_ops = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"deepClone\"])(last_ops);\n    new_ops.push({\n      \"type\": type,\n      \"op\": op,\n      \"val\": isLeftProxy ? r_value : l_value,\n      side: side\n    });\n    return Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"makeProxy\"])(res_value, identifier, new_ops, isRealValue);\n\n  }\n}\n\nfunction negateConstraint(constraint) {\n  return {'type': 'Unary', 'op': '!', val: constraint};\n}\n\nfunction isNativeFunc(fun) {\n  return Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"getFunctionString\"])(fun).indexOf('native code') > -1;\n}\n\nfunction isDestructiveCall(e) {\n  if (Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"getFunctionString\"])(e.call) === \"function removeChild() { [native code] }\") {\n    return true\n  }\n  return false;\n}\n\nfunction instrumentStage(stage) {\n  let funlistener = stage.addListener(Iroh.FUNCTION);\n  funlistener.on('return', (e) => {\n    let saved_state = e.instance.ForceExecution.savedFunState;\n    if (e.instance.ForceExecution.pathConstraints.length > 0 && saved_state.length > 0) {\n      for (let constraint of e.instance.ForceExecution.pathConstraints) {\n        saved_state[saved_state.length - 1].push(constraint);\n      }\n    }\n  });\n\n  let listener = stage.addListener(Iroh.CALL);\n  listener.on(\"before\", (e) => {\n    checkForFlowToSink(e);\n    if (isDestructiveCall(e)) {\n      console.warn('replacing destructive call with no-op', e.call);\n      e.call = function () {\n      };\n      return;\n    }\n\n    console.warn('this is before call', e);\n    if (e.external) {\n      if (!isNativeFunc(e.call) && e.object === null) {\n        // If it is not a native function we can hook it on the fly\n        let hooked;\n        if (fun_mapping.has(Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"getFunctionString\"])(e.call))) {\n          hooked = fun_mapping.get(Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"getFunctionString\"])(e.call));\n        } else {\n          window.__reportExternalFun(Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"getFunctionString\"])(e.call), e.instance.ForceExecution.handler_id);\n          hooked = new Iroh.Stage('(' + Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"getFunctionString\"])(e.call) + ')');\n          instrumentStage(hooked);\n          fun_mapping.set(Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"getFunctionString\"])(e.call), hooked);\n        }\n        let __begin_tests = () => {\n          e.instance.ForceExecution.inTest = true;\n          e.instance.ForceExecution.constraintBuffer = [];\n\n        };\n        hooked.ForceExecution = e.instance.ForceExecution;\n        let deepClone = window.deepClone;\n        e.call = eval(hooked.script);\n\n        e.instance.ForceExecution.savedFunState.push(e.instance.ForceExecution.pathConstraints);\n        e.instance.ForceExecution.pathConstraints = [];\n\n      } else {\n        if (e.object && e.object === JSON && e.callee === 'parse') {\n          e.arguments = ['{}']\n        }\n        for (let i = 0; i < e.arguments.length; i++) {\n          let arg = e.arguments[i];\n          if (Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(arg)) {\n            e.arguments[i] = e.arguments[i].__get_real_obj\n          }\n        }\n      }\n    }\n  });\n\n  listener.on(\"after\", (e) => {\n    console.log('calling', e);\n    if (e.external) {\n      if (!isNativeFunc(e.call) && e.object === null) {\n        // this is the case when we hooked the function on the fly and need to restore this functions setting\n        e.instance.ForceExecution.pathConstraints = e.instance.ForceExecution.savedFunState.pop();\n      }\n    }\n    if (e.object !== null) {\n      if (Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.object)) {\n        // if we call a function on the object it needs to be a real thing thus we need to put this into the SMT solver\n        // otherwise we might not consider this object if it does not partake in a conditional but this call would throw an exception\n        e.instance.ForceExecution.emitConstraint(extractConstraintFromProxy(e.object));\n        let identifier = e.object.__get_identifier;\n        let last_ops = e.object.__get_ops;\n        let new_ops = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"deepClone\"])(last_ops);\n        let isRealValue = e.object.__is_real_value;\n\n        new_ops.push({\n          type: 'member_function',\n          function_name: e.callee,\n          args: Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"deProxifyArguments\"])([].slice.call(e.real_arguments))\n        });\n        e.return = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"makeProxy\"])(e.return, identifier, new_ops, isRealValue);\n      } else if (e.object.__proto__ === RegExp.prototype && e.call === /a/.test && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.real_arguments[0])) {\n        let p = e.real_arguments[0];\n        let identifier = p.__get_identifier;\n        let last_ops = p.__get_ops;\n        let new_ops = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"deepClone\"])(last_ops);\n        let isRealValue = p.__is_real_value;\n\n\n        let regex = e.object.toString();\n\n        new_ops.push({\n          type: 'member_function',\n          function_name: 'match',\n          args: [regex.slice(1).slice(0, regex.lastIndexOf('/') - 1)]\n        });\n        e.return = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"makeProxy\"])(e.return, identifier, new_ops, isRealValue);\n      } else if (e.arguments.length) {\n        if (e.object === JSON && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.real_arguments[0])) {\n          // the case for e.g. JSON.parse\n          let p = e.real_arguments[0];\n          let identifier = p.__get_identifier;\n          let last_ops = p.__get_ops;\n          let new_ops = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"deepClone\"])(last_ops);\n          let isRealValue = p.__is_real_value;\n\n          new_ops.push({\n            type: 'external_function',\n            function_name: 'JSON.parse',\n            args: Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"deProxifyArguments\"])([].slice.call(e.real_arguments))\n          });\n          e.return = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"makeProxy\"])(e.return, identifier, new_ops, isRealValue);\n        } else if (e.object === localStorage && e.callee === 'getItem') {\n          if (shouldPrivacyThings) {\n            let ops = [];\n            let id;\n            if (Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.real_arguments[0])) {\n              ops.push({\n                type: 'member_function',\n                function_name: e.callee,\n                args: [extractConstraintFromProxy(e.real_arguments[0])]\n              });\n              id = '';\n            } else {\n              id = e.real_arguments[0]\n            }\n            e.return = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"makeProxy\"])(id, 'storage', ops, true)\n          }\n        } else {\n          let hasProxyAsArgument = false;\n          let args = [];\n          for (let arg of e.real_arguments) {\n            if (Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(arg)) {\n              hasProxyAsArgument = true;\n              args.push(extractConstraintFromProxy(arg))\n            } else {\n              args.push(arg)\n            }\n          }\n          if (hasProxyAsArgument) {\n            e.return = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"makeProxy\"])(e.object, e.object, [{\n              type: 'member_function',\n              function_name: e.callee,\n              args: args\n            }], true)\n          }\n        }\n      }\n    } else if (e.real_arguments.length === 1 && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.real_arguments[0]) && !e.name.startsWith(\"$$ANON\") && isNativeFunc(e.call)) {\n      let p = e.real_arguments[0];\n      let identifier = p.__get_identifier;\n      let last_ops = p.__get_ops;\n      let new_ops = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"deepClone\"])(last_ops);\n      let isRealValue = p.__is_real_value;\n\n      new_ops.push({\n        type: 'external_function',\n        function_name: e.name,\n        args: Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"deProxifyArguments\"])([].slice.call(e.real_arguments))\n      });\n\n      e.return = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"makeProxy\"])(e.return, identifier, new_ops, isRealValue)\n    }\n\n  });\n\n  let memberListener = stage.addListener(Iroh.MEMBER);\n  memberListener.on(\"fire\", (e) => {\n    console.log('Member', e);\n    if (e.object === document && e.property === 'cookie' && shouldPrivacyThings) {\n      e.object = {};\n      e.object[e.property] = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"makeProxy\"])(document.cookie, 'cookie', [], true)\n    }\n    if (e.object === localStorage && typeof e.object[e.property] !== 'function' && shouldPrivacyThings) {\n      let ops = [];\n      let id;\n      if (Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.property)) {\n        ops.push({\n          type: 'member_function',\n          function_name: 'getItem',\n          args: [extractConstraintFromProxy(e.property)]\n        });\n        id = '';\n      } else {\n        id = e.property\n      }\n      e.object = {};\n\n      e.object[e.property] = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"makeProxy\"])(id, 'storage', ops, true)\n    }\n    // takes care that environment does not produce errors when accessing further things on non-existing properties\n    // let accessed_prop = e.object[e.property];\n    //if (!isProxy(accessed_prop) && accessed_prop === undefined) {\n    //  e.object[e.property] = {};\n    //}\n  });\n\n  let assignListener = stage.addListener(Iroh.ASSIGN);\n  assignListener.on(\"fire\", (e) => {\n    console.log('Assign', e);\n    if ((e.property === 'innerHTML' || e.property === 'outerHTML') && e.value && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.value)) {\n      e.instance.ForceExecution.emitSinkAccess(e.value, 'innerHTML', -1, e.hash);\n    }\n    if ((e.property === 'textContent' || e.property === 'innerText' || e.property === 'text') && e.object instanceof HTMLScriptElement && e.value && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.value)) {\n      e.instance.ForceExecution.emitSinkAccess(e.value, 'scriptTextContent', -1, e.hash);\n    }\n    if (e.object === localStorage && e.property && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.property) && e.value && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.value)) {\n      e.instance.ForceExecution.emitStorageAccess(e.property, e.value, e.hash);\n    }\n    if (e.object === document && e.property && e.property === 'cookie' && e.value && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.value)) {\n      e.instance.ForceExecution.emitSinkAccess(e.value, 'cookie', -1, e.hash);\n    }\n  });\n\n  let IFListener = stage.addListener(Iroh.IF);\n  IFListener.on(\"test\", (e) => {\n    console.log(\"IFTEST\", e, e.value);\n    let constraint;\n    if (constraint === undefined && e.value !== undefined && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.value)) {\n      constraint = extractConstraintFromProxy(e.value);\n    }\n    if (constraint && e.instance.ForceExecution.stale.has(e.hash)) {\n      constraint = negateConstraint(constraint);\n    }\n    if (constraint)\n      e.instance.ForceExecution.emitConstraint(constraint);\n\n    e.instance.ForceExecution.clearLogicalConstraintBuffer();\n\n    e.value = !e.instance.ForceExecution.stale.has(e.hash);\n    console.log(\"Forcing branch to\", e.value)\n  });\n  IFListener.on(\"enter\", (e) => {\n    console.log(\"IFENTER\", e, e.value);\n    // For nested ifs we need to save the \"old\" hash and retrieve it later on\n    // such that we can really pinpoint which if was potential the culprit of an error and thus label this as stale\n    e.instance.ForceExecution.BBHashMap.set(e.hash, e.instance.ForceExecution.curBBHash);\n    e.instance.ForceExecution.curBBHash = e.hash;\n  });\n\n  IFListener.on(\"leave\", (e) => {\n    console.log(\"IFLEAVE\", e, e.value);\n    //e.instance.ForceExecution.popConstraint();\n    e.instance.ForceExecution.curBBHash = e.instance.ForceExecution.BBHashMap.get(e.hash);\n\n    if (e.instance.ForceExecution.shouldLabelAsStale && !e.instance.ForceExecution.stale.has(e.hash)) {\n      e.instance.ForceExecution.shouldLabelAsStale = false;\n      e.instance.ForceExecution.stale.add(e.hash);\n    }\n    console.log(\"leave if\", e)\n  });\n\n  let ELSEListener = stage.addListener(Iroh.ELSE);\n  ELSEListener.on(\"enter\", (e) => {\n    console.log(\"enter else\");\n  });\n  ELSEListener.on(\"leave\", (e) => {\n    console.log(\"leave else\");\n\n  });\n  let SWITCHListener = stage.addListener(Iroh.SWITCH);\n\n  SWITCHListener.on(\"test\", (e) => {\n    console.log(\"SWICHTEST\", e);\n    e.instance.ForceExecution.switchValue = e.value;\n    e.value = e.instance.ForceExecution.randomValue;\n  });\n\n  let CASEListener = stage.addListener(Iroh.CASE);\n\n  CASEListener.on(\"test\", (e) => {\n    console.log(\"CASETEST\", e);\n    if (e.instance.ForceExecution.stale.has(e.hash)) {\n      e.value = 'nope';\n    } else {\n      if (Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.instance.ForceExecution.switchValue)) {\n        let constraint = extractConstraintFromProxy(e.instance.ForceExecution.switchValue);\n        constraint['ops'].push({\n          \"type\": \"Binary\",\n          \"op\": '==',\n          \"val\": e.value,\n          \"side\": 'right',\n        })\n        ;\n        e.instance.ForceExecution.emitConstraint(constraint);\n      }\n      e.value = e.instance.ForceExecution.randomValue;\n    }\n    console.log(\"Forcing branch to\", e.value)\n  });\n\n  CASEListener.on(\"enter\", (e) => {\n    console.log(\"enter case\", e);\n    e.instance.ForceExecution.BBHashMap.set(e.hash, e.instance.ForceExecution.curBBHash);\n    e.instance.ForceExecution.curBBHash = e.hash;\n\n  });\n  CASEListener.on(\"leave\", (e) => {\n    e.instance.ForceExecution.curBBHash = e.instance.ForceExecution.BBHashMap.get(e.hash);\n\n    if (e.instance.ForceExecution.shouldLabelAsStale && !e.instance.ForceExecution.stale.has(e.hash)) {\n      e.instance.ForceExecution.shouldLabelAsStale = false;\n      e.instance.ForceExecution.stale.add(e.hash);\n    }\n    console.log(\"leave case\");\n  });\n\n  let LogicalListener = stage.addListener(Iroh.LOGICAL);\n  LogicalListener.on(\"before_second\", (e) => {\n    console.warn('before second');\n    // First we capture the actual result which in the case of chained\n    if (e.left !== null && typeof e.left == \"object\" && e.left.__is_proxy !== undefined) {\n      // Lazy execution leads to a situation where always the left one is the finished one, the right one is yet to be evaluated\n      e.instance.ForceExecution.emitLogicalConstraint(e.left.__get_ops, e.op, e.left.__get_identifier);\n    }\n    // We need to capture all logical things until end of if test.\n    e.result = e.op !== '||';\n  });\n\n  LogicalListener.on(\"fire\", (e) => {\n    console.warn(\"Logical Comparator\", e);\n    let res = generateBinaryResult(e.real_left, e.real_right, e.op, 'Logical', e.instance.ForceExecution);\n    if (res !== undefined) {\n      e.result = res;\n    }\n  });\n\n  let BinaryListener = stage.addListener(Iroh.BINARY);\n  BinaryListener.on(\"fire\", (e) => {\n    console.warn(\"BINARY Comparator\", e);\n    let res = generateBinaryResult(e.left, e.right, e.op, 'Binary', e.instance.ForceExecution);\n    if (res !== undefined) {\n      e.result = res;\n    }\n  });\n\n  let UnaryListener = stage.addListener(Iroh.UNARY);\n  UnaryListener.on(\"fire\", (e) => {\n    console.warn(\"Unary Comparator\", e);\n    let isProxyValue = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.value);\n\n    if (isProxyValue) {\n      let identifier = e.value.__get_identifier;\n      let last_ops = e.value.__get_ops;\n      let real_value = e.value.__get_real_obj;\n      let isRealValue = e.value.__is_real_value;\n\n      let res_value = _evaluationHelper_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].evalUnary(e.op, real_value);\n      let new_ops = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"deepClone\"])(last_ops);\n      new_ops.push({\"type\": \"Unary\", \"op\": e.op});\n      e.result = Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"makeProxy\"])(res_value, identifier, new_ops, isRealValue);\n    }\n  });\n\n  let LoopListener = stage.addListener(Iroh.LOOP);\n  LoopListener.on(\"test\", (e) => {\n    let constraint;\n    if (constraint === undefined && e.value !== undefined && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.value)) {\n      constraint = extractConstraintFromProxy(e.value);\n    }\n    // only emit constraint if we loop, otherwise dont add any constraint\n    // this will we cleaned up once we leave the loop\n    if (constraint && !e.instance.ForceExecution.forcedLoop.has(e.hash)) {\n      e.instance.ForceExecution.emitConstraint(constraint);\n    }\n    if (Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.value)) {\n      e.value = !e.instance.ForceExecution.forcedLoop.has(e.hash);\n      e.instance.ForceExecution.forcedLoop.add(e.hash);\n      console.log(\"Forcing For Loop to\", e.value)\n    }\n  });\n\n  let TernaryListener = stage.addListener(Iroh.TERNARY);\n  TernaryListener.on(\"before\", (e) => {\n    console.log(\"Ternary before\", e);\n    let constraint;\n    if (e.test !== undefined && Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"isProxy\"])(e.test)) {\n      constraint = extractConstraintFromProxy(e.test);\n    }\n    if (constraint && e.instance.ForceExecution.stale.has(e.hash)) {\n      constraint = negateConstraint(constraint);\n    }\n    if (constraint)\n      e.instance.ForceExecution.emitConstraint(constraint);\n\n    e.test = !e.instance.ForceExecution.stale.has(e.hash);\n\n    if (e.instance.ForceExecution.shouldLabelAsStale && !e.instance.ForceExecution.stale.has(e.hash)) {\n      e.instance.ForceExecution.shouldLabelAsStale = false;\n      e.instance.ForceExecution.stale.add(e.hash);\n    }\n  });\n}\n\n\nasync function analyzeHandler(code, handler_id) {\n  // ANALYZE HELPER VARIABLES\n  let stage;\n  try {\n    stage = new Iroh.Stage(`(${Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"getFunctionString\"])(code)})(ev)`);\n  } catch (e) {\n    console.error('WTF', code.toString());\n    window.__report_failed_handler(handler_id, 'Iroh could not parse this one!', Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"getFunctionString\"])(code));\n    return\n  }\n  instrumentStage(stage);\n\n  let i = 0;\n  let stale;\n  console.log('start analysis');\n  let fr = new _ForcedRun_js__WEBPACK_IMPORTED_MODULE_0__[\"ForcedRun\"](stage, handler_id, code);\n  do {\n    if (i++ === 30) {\n      console.error(\"Emergency break\");\n      break;\n    }\n    stale = fr.run(stage.script);\n\n  } while (!stale);\n\n  let exploitos = [];\n  for (let arr of fr.retrieveReport().values()) {\n    for (let report of arr) {\n      if (report['target'] !== 'manual') {\n        let p = Object(_ExploitGenerator_js__WEBPACK_IMPORTED_MODULE_3__[\"generateExploitForReport\"])(report, handler_id);\n        exploitos.push(p);\n      } else {\n        delete report.ev;\n        window.__report_manual_exploit(report, handler_id);\n      }\n    }\n  }\n  console.log('Waiting for all exploits', exploitos.length);\n  exploitos = await Promise.all(exploitos);\n  let entries = [...exploitos];\n  entries = entries.filter(function (entry) {\n    return entry !== undefined && entry !== null\n  });\n  for (let entry of entries) {\n    let cands = entry['candidates'];\n    let ev;\n    for (let cand of cands) {\n      try {\n        console.log(cand)\n        ev = cand['message'];\n        await window.__clean_for_exploit();\n        console.log(\"Trying Exploit stuff\", code, 'with', ev, handler_id);\n        eval(`(${Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"getFunctionString\"])(code)})(ev)`);\n\n        await Object(_util_js__WEBPACK_IMPORTED_MODULE_2__[\"delay\"])(1000)\n      } catch (e) {\n        console.error('Error in executing with payload', e, ev)\n      }\n      // check for alterations in stores\n      if (entry['sink'] === 'storage') {\n        for (let key in JSON.parse(JSON.stringify(localStorage))) {\n          if (key === cand['exploitId']) {\n            __crawly__(key);\n          }\n        }\n      }\n      if (entry['sink'] === 'cookie') {\n        let cookies = parseCookies();\n        let cookie_keys = Object.keys(cookies);\n        for (let key of cookie_keys) {\n          if (key === cand['exploitId']) {\n            __crawly__(key);\n          }\n        }\n      }\n    }\n  }\n  // report found exploits back to the crawler to save to DB/display to the console\n  await window.__report_exploits(Array.from(entries), handler_id);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./Analyzer.js\n");

/***/ }),

/***/ "./ExploitGenerator.js":
/*!*****************************!*\
  !*** ./ExploitGenerator.js ***!
  \*****************************/
/*! exports provided: generateExploitForReport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateExploitForReport\", function() { return generateExploitForReport; });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./util.js\");\n/*\nCopyright (C) 2020  Marius Steffens, CISPA\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\nconst SINK_MAPPING = {\n  'eval': 'JS',\n  'document.write': 'HTML',\n  'document.writeln': 'HTML',\n  'innerHTML': 'HTML',\n  'jquery': 'HTML',\n  'scriptTextContent': 'JS',\n  'insertAdjacentHTML': 'HTML',\n  'postMessage': 'PM',\n  'storage': 'storage',\n  'cookie': 'cookie',\n\n};\n\nfunction addPropToObj(obj, acc) {\n  if (typeof obj[acc] === 'object') {\n    // all good we have nothig to worry bout and can just add another one if necessary\n  } else {\n    // well we have constraint solved that parts of the thing needs to be that specific string\n    // substitute the string to a random key and hope for the best\n    let cur_value = obj[acc];\n    obj[acc] = {};\n    obj[acc]['__hope_for_the_best'] = cur_value;\n  }\n}\n\nfunction getJSExploits(sinkObject) {\n  let left, right;\n  let nonce_1 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n  let nonce_2 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n  let nonce_3 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n  let nonce_4 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n  let nonce_5 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n  let nonce_6 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n  let nonce_7 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n  let nonce_8 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n  let nonce_9 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n\n\n  let exploits = new Map();\n  let startswith_exploit_1 = {\n    \"type\": \"member_function\",\n    \"function_name\": \"startsWith\",\n    \"args\": [\n      '__crawly__(\"' + nonce_1 + '\")/*'\n    ]\n  };\n  let endswith_exploit_1 = {\n    \"type\": \"member_function\",\n    \"function_name\": \"endsWith\",\n    \"args\": [\n      ' */'\n    ]\n  };\n  left = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  right = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  left.ops.push(startswith_exploit_1);\n  right.ops.push(endswith_exploit_1);\n\n  let exp_1 = {type: 'Logical', op: '&&', l_val: left, r_val: right};\n  exploits.set(nonce_1, exp_1);\n\n  let startswith_exploit_2 = {\n    \"type\": \"member_function\",\n    \"function_name\": \"startsWith\",\n    \"args\": [\n      '(__crawly__(\"' + nonce_2 + '\")/*'\n    ]\n  };\n  let endswith_exploit_2 = {\n    \"type\": \"member_function\",\n    \"function_name\": \"endsWith\",\n    \"args\": [\n      ' */)'\n    ]\n  };\n\n  left = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  right = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  left.ops.push(startswith_exploit_2);\n  right.ops.push(endswith_exploit_2);\n\n  let exp_2 = {type: 'Logical', op: '&&', l_val: left, r_val: right};\n  exploits.set(nonce_2, exp_2);\n\n  let endswith_exploit_3 = {\n    \"type\": \"member_function\",\n    \"function_name\": \"endsWith\",\n    \"args\": [\n      ' */__crawly__(\"' + nonce_3 + '\")'\n    ]\n  };\n  let startswith_exploit_3 = {\n    \"type\": \"member_function\",\n    \"function_name\": \"startsWith\",\n    \"args\": [\n      '/*'\n    ]\n  };\n\n  left = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  right = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  left.ops.push(startswith_exploit_3);\n  right.ops.push(endswith_exploit_3);\n\n  let exp_3 = {type: 'Logical', op: '&&', l_val: left, r_val: right};\n  exploits.set(nonce_3, exp_3);\n\n  let kameeleon = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  kameeleon.ops.push({\n    type: \"Binary\",\n    op: '===',\n    side: 'left',\n    val: 'Kameleoon=1,__crawly__(\"' + nonce_4 + '\")'\n  });\n\n  exploits.set(nonce_4, kameeleon);\n\n  let startsWithFixObject = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  startsWithFixObject.ops.push({\n    type: \"member_function\",\n    function_name: \"endsWith\",\n    args: ['.toString(),__crawly__(\"' + nonce_5 + '\")']\n  });\n\n  exploits.set(nonce_5, startsWithFixObject);\n\n  let startsWithAssignement = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  startsWithAssignement.ops.push({\n    type: \"member_function\",\n    function_name: \"endsWith\",\n    args: ['1;__crawly__(\"' + nonce_6 + '\");']\n  });\n\n  exploits.set(nonce_6, startsWithAssignement);\n\n  let startsWithAssignementWithoutEqual = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  startsWithAssignementWithoutEqual.ops.push({\n    type: \"member_function\",\n    function_name: \"endsWith\",\n    args: ['=1;__crawly__(\"' + nonce_7 + '\");']\n  });\n\n  exploits.set(nonce_7, startsWithAssignementWithoutEqual);\n\n\n  let endsWithanything = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  endsWithanything.ops.push({\n    type: \"member_function\",\n    function_name: \"startsWith\",\n    args: ['__crawly__(\"' + nonce_8 + '\");//']\n  });\n\n  exploits.set(nonce_8, endsWithanything);\n\n  let wrapped_function = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  wrapped_function.ops.push({\n    \"type\": \"member_function\",\n    \"function_name\": \"startsWith\",\n    \"args\": [\n      '(function(){__crawly__(\"' + nonce_9 + '\")})();//'\n    ]\n  });\n  exploits.set(nonce_9, wrapped_function);\n\n  return exploits;\n\n}\n\nfunction getStorageExploits(key_obj, val_obj) {\n  let exploits = new Map();\n  let nonce_1 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n\n  let key_const = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(key_obj);\n  let val_const = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(val_obj);\n\n  key_const.ops.push({\n    \"type\": \"Binary\",\n    \"op\": '===',\n    \"side\": \"left\",\n    \"val\": nonce_1\n  });\n\n  val_const.ops.push({\n    \"type\": \"Binary\",\n    \"op\": '===',\n    \"side\": \"left\",\n    \"val\": nonce_1\n  });\n\n  exploits.set(nonce_1, {\n    \"type\": \"Logical\",\n    \"op\": '&&',\n    \"l_val\": key_const,\n    \"r_val\": val_const\n  });\n\n  return exploits\n}\n\nfunction getHTMLExploits(sinkObject) {\n  let exploits = new Map();\n\n  let nonce_1 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n  let exp1 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject)\n  let img_payload = '<img src=\"foo\" onerror=\"__crawly__(`__report_id`)\" onload=\"__crawly__(`__report_id`)\"><textarea>';\n  exp1.ops.push({\n    \"type\": \"member_function\",\n    \"function_name\": \"indexOf\",\n    \"args\": [img_payload.replace(/__report_id/g, nonce_1)],\n  });\n  exp1.ops.push({type: 'Binary', op: '>', side: 'left', val: 0})\n  exploits.set(nonce_1, exp1)\n  let nonce_3 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n  let exp3 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  let polyglot = \"`'\\\">--!></stYle/</titLe/</teXtarEa/</scRipt/><img/src=foo oNloAd=__crawly__(`__report_id`)//>\\x3e\\n\";\n  exp3.ops.push({\n    \"type\": \"member_function\",\n    \"function_name\": \"indexOf\",\n    \"args\": [polyglot.replace(/__report_id/g, nonce_3)],\n  });\n  exp3.ops.push({type: 'Binary', op: '>', side: 'left', val: 0});\n  exploits.set(nonce_3, exp3);\n\n\n  return exploits\n\n}\n\nfunction getOriginConstraints() {\n  return {\n    type: 'Logical', op: '||', l_val: {\n      \"ops\": [\n        {\n          \"type\": \"ops_on_parent_element\",\n          \"old_identifier\": \"event\",\n          \"old_ops\": []\n        },\n        {\n          \"type\": \"member_function\",\n          \"function_name\": \"substring\",\n          \"args\": [\n            0, 7\n          ]\n        },\n        {\n          \"type\": 'Binary',\n          \"side\": \"left\",\n          \"val\": \"http://\",\n          \"op\": '==='\n        }\n      ],\n      \"identifier\": \"event.origin\"\n    }, r_val: {\n      \"ops\": [\n        {\n          \"type\": \"ops_on_parent_element\",\n          \"old_identifier\": \"event\",\n          \"old_ops\": []\n        },\n        {\n          \"type\": \"member_function\",\n          \"function_name\": \"substring\",\n          \"args\": [\n            0, 8\n          ]\n        },\n        {\n          \"type\": 'Binary',\n          \"side\": \"left\",\n          \"val\": \"https://\",\n          \"op\": '==='\n        }\n      ],\n      \"identifier\": \"event.origin\"\n    }\n  }\n}\n\nfunction getCookieExploits(sinkObject) {\n  let nonce1 = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n  let exploits = new Map();\n\n\n  let constraints = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(sinkObject);\n  constraints.ops.push({\n    \"type\": \"member_function\",\n    \"function_name\": \"startsWith\",\n    \"args\": [nonce1 + '=' + nonce1 + ';']\n  });\n  exploits.set(nonce1, constraints);\n\n  return exploits\n}\n\nasync function generateExploitForReport(report, handler_id) {\n  console.log('=============');\n  console.log('Starting exploit generation for ', report);\n  let inferred_types = {};\n  try {\n    //inferred_types = inferTypes(report.ev)\n    inferred_types = report.typeInfo;\n  } catch (e) {\n    console.error('Error when infering types', e)\n  }\n  let sink_obj_constraints;\n  switch (SINK_MAPPING[report.sink]) {\n    case 'JS':\n      sink_obj_constraints = getJSExploits(report.sinkObject);\n      break;\n    case 'HTML':\n      sink_obj_constraints = getHTMLExploits(report.sinkObject);\n      break;\n    case 'storage':\n      sink_obj_constraints = getStorageExploits(report.key_obj, report.val_obj);\n      break;\n    case 'cookie':\n      sink_obj_constraints = getCookieExploits(report.sinkObject);\n      break;\n\n    default:\n      throw Error('Sink not yet supported ' + report.sink)\n  }\n\n  let cs = report['constraints'];\n  let constraintId = await window.__reportBaseConstraint(cs, handler_id);\n\n  let origin_constraint = getOriginConstraints();\n  let exploit_candidates = [];\n  for (let exploitId of sink_obj_constraints.keys()) {\n    let candidate = sink_obj_constraints.get(exploitId);\n    let cs_cloned = Object(_util__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(cs);\n    // append exploit constraints\n    cs_cloned.push(candidate);\n    // append constraints for origin, e.g. starts with http etc\n    cs_cloned.push(origin_constraint);\n    // solve\n    let res = await window.__trySolveForSat(cs_cloned, inferred_types, constraintId, [candidate, origin_constraint], report['sink']);\n    if (res !== undefined) {\n      exploit_candidates.push({exploitCandidateId: res[1], exploitId: exploitId, payload_sat: res[0]});\n    }\n  }\n  if (exploit_candidates.length === 0) {\n    return undefined\n  }\n  let messages = [];\n  for (let entry of exploit_candidates) {\n    let mess1 = generateObjectFromAssignements(entry['payload_sat']['assignements'])['event'];\n    let mess2 = generateObjectFromAssignements(entry['payload_sat']['assignements'], undefined, false)['event'];\n    messages.push({\n      exploitId: entry['exploitId'],\n      exploitCandidateId: entry['exploitCandidateId'],\n      message: adjustForTypes(mess1, entry['payload_sat']['types'])\n    });\n    messages.push({\n      exploitId: entry['exploitId'],\n      exploitCandidateId: entry['exploitCandidateId'],\n      message: adjustForTypes(mess2, entry['payload_sat']['types'])\n    });\n\n  }\n  return {\n    candidates: messages,\n    sink: report.sink\n  };\n}\n\nfunction adjustForTypes(obj, types) {\n  for (let key of Object.keys(types)) {\n    if (types[key] !== 'JSON') {\n      continue;\n    }\n    let splitted = key.split('.');\n    let last = splitted.slice(-1);\n    let accessors = splitted.slice(0, splitted.length - 1);\n    let cur_obj = obj;\n    for (let accessor of accessors) {\n      if (accessor.startsWith('__elem__')) {\n        let num = parseInt(accessor.slice(8));\n        if (!Array.isArray(cur_obj)) {\n        }\n        accessor = num;\n      }\n      if (cur_obj[accessor] === undefined) {\n        break;\n      }\n      cur_obj = cur_obj[accessor];\n    }\n    cur_obj[last] = JSON.stringify(cur_obj[last])\n  }\n  return obj\n}\n\nfunction generateObjectFromAssignements(assignement, obj = undefined, dont_use_empty = true) {\n  if (obj === undefined) {\n    obj = {};\n  }\n  for (let key of Object.keys(assignement)) {\n    if (dont_use_empty && assignement[key] === '') {\n      continue\n    }\n    if (typeof assignement[key] === 'string') {\n      assignement[key] = assignement[key].replace(/\\\\x([0-9A-F]{2})/ig, function () {\n        return String.fromCharCode(parseInt(arguments[1], 16));\n      });\n    }\n    let splitted = key.split('.');\n    let last = splitted.slice(-1);\n    let accessors = splitted.slice(0, splitted.length - 1);\n    let cur_obj = obj;\n    for (let accessor of accessors) {\n      if (accessor.startsWith('__elem__')) {\n        let num = parseInt(accessor.slice(8));\n        if (!Array.isArray(cur_obj)) {\n        }\n        accessor = num;\n      }\n      if (cur_obj[accessor] === undefined) {\n        cur_obj[accessor] = {};\n      } else {\n        addPropToObj(cur_obj, accessor);\n      }\n      cur_obj = cur_obj[accessor];\n    }\n    if (cur_obj[last[0]] === undefined)\n      cur_obj[last[0]] = assignement[key];\n    else {\n      // this case only happens when we have an assignement for a parent object which is however already an object thus we cannot do it\n      cur_obj[last[0]]['__hope_for_the_best'] = assignement[key]\n    }\n  }\n  resolveSubstituteVals(obj, obj);\n  return obj;\n}\n\nfunction resolveSubstituteVals(obj, g) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      let elem = resolveSubstituteVals(obj[i], g);\n      if (elem) {\n        obj[i] = elem;\n      }\n    }\n  } else if (typeof obj === 'object') {\n    for (let key of Object.keys(obj)) {\n      let elem = resolveSubstituteVals(obj[key], g);\n      if (elem) {\n        obj[key] = elem\n      }\n    }\n  } else if (typeof obj === 'string' && obj.startsWith('__substitute_values_')) {\n    return g[obj];\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ExploitGenerator.js\n");

/***/ }),

/***/ "./ForcedRun.js":
/*!**********************!*\
  !*** ./ForcedRun.js ***!
  \**********************/
/*! exports provided: ForcedRun */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ForcedRun\", function() { return ForcedRun; });\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.js */ \"./util.js\");\n/*\nCopyright (C) 2020  Marius Steffens, CISPA\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\nclass ForcedRun {\n  constructor(stage, handler_id, fun) {\n    this.old_stale = new Set();\n    this.stage = stage;//  new Iroh.Stage(`(${code.toString()})(ev)`);\n    this.reports = new Map();\n    this.handler_id = handler_id;\n    this.fun = fun;\n  }\n\n  run() {\n    console.log('========== Starting new round ==========');\n    let ev = Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"makeProxy\"])({\n      origin: '', data: {}, source: {\n        postMessage: function (data, origin) {\n\n        }\n      }\n    }, 'event');\n    this.stage.ForceExecution = this._createAnalysisState(ev);\n    // code takes ev as input\n\n    // arrow functions dont overwrite this => this still bound to the instance of ForcedRun\n    // this function will be called by the instrumented code\n    let __begin_tests = () => {\n      this.stage.ForceExecution.inTest = true;\n      this.stage.ForceExecution.constraintBuffer = undefined;\n    };\n    window.__addTypeInfo = (i, t) => {\n      this.stage.ForceExecution.addTypeInfo(i, t);\n    };\n\n    this.stage.ForceExecution.__leave_tests = () => {\n      this.stage.ForceExecution.inTest = false;\n      let res = this.stage.ForceExecution.getConstraintBuffer();\n      this.stage.ForceExecution.constraintBuffer = undefined;\n      return res;\n    };\n    let isStale = true;\n\n    let __id_to_set, __fun_obj, __fun_code;\n    try {\n      eval(this.stage.script);\n    } catch (e) {\n      let match = e.message.match(/([a-zA-Z0-9]+) is not defined/)\n      if (match) {\n        __id_to_set = match[1];\n        __fun_obj = this.fun;\n        debugger;\n      }\n      if (__fun_code) {\n        isStale = false;\n      } else {\n        // We need to take care that if there was no stale block yet we need to mark the current block as stale\n        this.stage.ForceExecution.stale.add(this.stage.ForceExecution.curBBHash);\n        console.error('Unexpected error from force Execution', e, 'Forcing', this.stage.ForceExecution.curBBHash, 'to be stale now')\n      }\n    }\n    // fun code will be set by debugger when we found the corresponding missing identifier from the other scope\n\n    isStale = isStale && (this.old_stale.size === this.stage.ForceExecution.stale.size);\n    this.old_stale = this.stage.ForceExecution.stale;\n    console.log(this.old_stale, this.stage.ForceExecution.stale);\n    return isStale;\n  }\n\n  _createAnalysisState(ev) {\n    let st = {};\n    st.curBBHash = null;\n    st.BBHashMap = new Map();\n    st.shouldLabelAsStale = true;\n    st.randomValue = Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"randomString\"])();\n    st.pathConstraints = [];\n    st.inTest = false;\n    st.stale = new Set(this.old_stale);\n    st.forcedLoop = new Set();\n    st.typeInfo = new Map();\n    st.ConstraintMap = new Map();\n    st.constraintBuffer = undefined;\n    st.reports = this.reports;\n    st.ev = ev;\n    st.savedFunState = [];\n    st.handler_id = this.handler_id;\n    st.emitConstraint = function (constraint) {\n      this.pathConstraints.push(constraint);\n    };\n    st.popConstraint = function () {\n      this.pathConstraints.pop();\n    };\n\n    st.getConstraintBuffer = function () {\n      if (this.constraintBuffer === undefined) {\n        return undefined;\n      }\n      let buf = undefined;\n      for (let i = this.constraintBuffer.length - 1; i >= 0; i--) {\n        if (buf === undefined) {\n          buf = this.constraintBuffer[i][1];\n        } else {\n          buf = {type: 'Logical', op: this.constraintBuffer[i][0], l_val: this.constraintBuffer[i][1], r_val: buf};\n        }\n      }\n      return buf;\n    };\n\n    st.addTypeInfo = function (identifier, type) {\n      this.typeInfo.set(identifier, type);\n    };\n    st.getTypeInfo = function () {\n      let res = [];\n      for (let k of this.typeInfo.keys()) {\n        res.push([k, this.typeInfo.get(k)])\n      }\n      return res;\n    };\n\n    st.emitLogicalConstraint = function (ops, op, identifier) {\n      if (this.constraintBuffer === undefined) {\n        this.constraintBuffer = [[op, {ops: ops, identifier: identifier}]];\n      } else if (op !== undefined) {\n        this.constraintBuffer.push([op, {ops: ops, identifier: identifier}]);\n      } else {\n        throw Error('Unexpected Behaviour in emit LogicalConstraint')\n      }\n    };\n    st.clearLogicalConstraintBuffer = function () {\n      this.constraintBuffer = undefined;\n    };\n    st.emitSinkAccess = function (p, sink, arg_no, hash, target = 'XSS') {\n      let cur_constraints = Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(this.pathConstraints);\n      for (let savedConstraints of this.savedFunState) {\n        cur_constraints = cur_constraints.concat(Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(savedConstraints))\n      }\n      if (this.constraintBuffer && this.constraintBuffer.length) {\n        cur_constraints.push(Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(this.getConstraintBuffer()))\n      }\n      let ev = this.ev;\n      if (!this.reports.has(hash)) {\n        this.reports.set(hash, [{\n          target: target,\n          sinkObject: Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepCloneProxy\"])(p),\n          arg_no: arg_no,\n          constraints: cur_constraints,\n          sink: sink,\n          ev: ev,\n          typeInfo: this.getTypeInfo(),\n        }])\n      } else {\n        // FIXME: comment this in if we want multiple reports per sink access\n        return;\n        this.reports.get(hash).push({\n          target: target,\n          sinkObject: Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepCloneProxy\"])(p),\n          arg_no: arg_no,\n          constraints: cur_constraints,\n          sink: sink,\n          ev: ev,\n          typeInfo: this.getTypeInfo(),\n        });\n      }\n    };\n    st.emitStorageAccess = function (key_obj, val_obj, hash) {\n      let cur_constraints = Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(this.pathConstraints);\n      for (let savedConstraints of this.savedFunState) {\n        cur_constraints = cur_constraints.concat(Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(savedConstraints))\n      }\n      if (this.constraintBuffer && this.constraintBuffer.length) {\n        cur_constraints.push(Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepClone\"])(this.getConstraintBuffer()))\n      }\n      let ev = this.ev;\n      if (!this.reports.has(hash)) {\n        this.reports.set(hash, [{\n          sink: 'storage',\n          key_obj: Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepCloneProxy\"])(key_obj),\n          val_obj: Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepCloneProxy\"])(val_obj),\n          constraints: cur_constraints,\n          ev: ev,\n          typeInfo: this.getTypeInfo(),\n\n        }])\n      } else {\n        this.reports.get(hash).push({\n          sink: 'storage',\n          key_obj: Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepCloneProxy\"])(key_obj),\n          val_obj: Object(_util_js__WEBPACK_IMPORTED_MODULE_0__[\"deepCloneProxy\"])(val_obj),\n          constraints: cur_constraints,\n          ev: ev,\n          typeInfo: this.getTypeInfo(),\n        });\n      }\n    };\n    return st;\n  }\n\n  retrieveReport() {\n    return this.reports;\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ForcedRun.js\n");

/***/ }),

/***/ "./evaluationHelper.js":
/*!*****************************!*\
  !*** ./evaluationHelper.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\nCopyright (c) Royal Holloway, University of London | Contact Blake Loring (blake@parsed.uk), Duncan Mitchell (Duncan.Mitchell.2015@rhul.ac.uk), or Johannes Kinder (johannes.kinder@rhul.ac.uk) for details or support\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\nconst BinaryJumpTable = {\n  \"==\": function(left, right) { return left == right; },\n  \"===\": function(left, right) { return left === right; },\n\n  \"!=\": function(left, right) { return left != right; },\n  \"!==\": function(left, right) { return left !== right; },\n\n  \"<\": function(left, right) { return left < right; },\n  \">\": function(left, right) { return left > right; },\n\n  \"<=\": function(left, right) { return left <= right; },\n  \">=\": function(left, right) { return left >= right; },\n\n  \"+\": function(left, right) { return left + right; },\n  \"-\": function(left, right) { return left - right; },\n\n  \"*\": function(left, right) { return left * right; },\n  \"/\": function(left, right) { return left / right; },\n\n  \"%\": function(left, right) { return left % right; },\n\n  \">>\": function(left, right) { return left >> right; },\n  \"<<\": function(left, right) { return left << right; },\n  \">>>\": function(left, right) { return left >>> right; },\n\n  \"&\": function(left, right) { return left & right; },\n  \"&&\": function(left, right) { return left && right; },\n\n  \"|\": function(l, r) { return l | r; },\n  \"||\": function(l, r) { return l || r; },\n\n  \"^\": function(l, r) { return l ^ r; },\n  \"instanceof\": function(l, r) { return l instanceof r; },\n  \"in\": function(l, r) { return l in r; }\n};\n\nconst UnaryJumpTable = {\n  \"!\": function(v) { return !v; },\n  \"~\": function(v) { return ~v; },\n  \"-\": function(v) { return -v; },\n  \"+\": function(v) { return +v; },\n  \"typeof\": function(v) { return typeof v; },\n  \"void\": function(){return void 0}\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  evalBinary: function(op, left, right) {\n    return BinaryJumpTable[op](left, right);\n  },\n\n  evalUnary: function(op, left) {\n    return UnaryJumpTable[op](left);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ldmFsdWF0aW9uSGVscGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUE1BbmFseXplci8uL2V2YWx1YXRpb25IZWxwZXIuanM/NGUyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IChjKSBSb3lhbCBIb2xsb3dheSwgVW5pdmVyc2l0eSBvZiBMb25kb24gfCBDb250YWN0IEJsYWtlIExvcmluZyAoYmxha2VAcGFyc2VkLnVrKSwgRHVuY2FuIE1pdGNoZWxsIChEdW5jYW4uTWl0Y2hlbGwuMjAxNUByaHVsLmFjLnVrKSwgb3IgSm9oYW5uZXMgS2luZGVyIChqb2hhbm5lcy5raW5kZXJAcmh1bC5hYy51aykgZm9yIGRldGFpbHMgb3Igc3VwcG9ydFxuUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcblRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG4qL1xuY29uc3QgQmluYXJ5SnVtcFRhYmxlID0ge1xuICBcIj09XCI6IGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7IHJldHVybiBsZWZ0ID09IHJpZ2h0OyB9LFxuICBcIj09PVwiOiBmdW5jdGlvbihsZWZ0LCByaWdodCkgeyByZXR1cm4gbGVmdCA9PT0gcmlnaHQ7IH0sXG5cbiAgXCIhPVwiOiBmdW5jdGlvbihsZWZ0LCByaWdodCkgeyByZXR1cm4gbGVmdCAhPSByaWdodDsgfSxcbiAgXCIhPT1cIjogZnVuY3Rpb24obGVmdCwgcmlnaHQpIHsgcmV0dXJuIGxlZnQgIT09IHJpZ2h0OyB9LFxuXG4gIFwiPFwiOiBmdW5jdGlvbihsZWZ0LCByaWdodCkgeyByZXR1cm4gbGVmdCA8IHJpZ2h0OyB9LFxuICBcIj5cIjogZnVuY3Rpb24obGVmdCwgcmlnaHQpIHsgcmV0dXJuIGxlZnQgPiByaWdodDsgfSxcblxuICBcIjw9XCI6IGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7IHJldHVybiBsZWZ0IDw9IHJpZ2h0OyB9LFxuICBcIj49XCI6IGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7IHJldHVybiBsZWZ0ID49IHJpZ2h0OyB9LFxuXG4gIFwiK1wiOiBmdW5jdGlvbihsZWZ0LCByaWdodCkgeyByZXR1cm4gbGVmdCArIHJpZ2h0OyB9LFxuICBcIi1cIjogZnVuY3Rpb24obGVmdCwgcmlnaHQpIHsgcmV0dXJuIGxlZnQgLSByaWdodDsgfSxcblxuICBcIipcIjogZnVuY3Rpb24obGVmdCwgcmlnaHQpIHsgcmV0dXJuIGxlZnQgKiByaWdodDsgfSxcbiAgXCIvXCI6IGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7IHJldHVybiBsZWZ0IC8gcmlnaHQ7IH0sXG5cbiAgXCIlXCI6IGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7IHJldHVybiBsZWZ0ICUgcmlnaHQ7IH0sXG5cbiAgXCI+PlwiOiBmdW5jdGlvbihsZWZ0LCByaWdodCkgeyByZXR1cm4gbGVmdCA+PiByaWdodDsgfSxcbiAgXCI8PFwiOiBmdW5jdGlvbihsZWZ0LCByaWdodCkgeyByZXR1cm4gbGVmdCA8PCByaWdodDsgfSxcbiAgXCI+Pj5cIjogZnVuY3Rpb24obGVmdCwgcmlnaHQpIHsgcmV0dXJuIGxlZnQgPj4+IHJpZ2h0OyB9LFxuXG4gIFwiJlwiOiBmdW5jdGlvbihsZWZ0LCByaWdodCkgeyByZXR1cm4gbGVmdCAmIHJpZ2h0OyB9LFxuICBcIiYmXCI6IGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7IHJldHVybiBsZWZ0ICYmIHJpZ2h0OyB9LFxuXG4gIFwifFwiOiBmdW5jdGlvbihsLCByKSB7IHJldHVybiBsIHwgcjsgfSxcbiAgXCJ8fFwiOiBmdW5jdGlvbihsLCByKSB7IHJldHVybiBsIHx8IHI7IH0sXG5cbiAgXCJeXCI6IGZ1bmN0aW9uKGwsIHIpIHsgcmV0dXJuIGwgXiByOyB9LFxuICBcImluc3RhbmNlb2ZcIjogZnVuY3Rpb24obCwgcikgeyByZXR1cm4gbCBpbnN0YW5jZW9mIHI7IH0sXG4gIFwiaW5cIjogZnVuY3Rpb24obCwgcikgeyByZXR1cm4gbCBpbiByOyB9XG59O1xuXG5jb25zdCBVbmFyeUp1bXBUYWJsZSA9IHtcbiAgXCIhXCI6IGZ1bmN0aW9uKHYpIHsgcmV0dXJuICF2OyB9LFxuICBcIn5cIjogZnVuY3Rpb24odikgeyByZXR1cm4gfnY7IH0sXG4gIFwiLVwiOiBmdW5jdGlvbih2KSB7IHJldHVybiAtdjsgfSxcbiAgXCIrXCI6IGZ1bmN0aW9uKHYpIHsgcmV0dXJuICt2OyB9LFxuICBcInR5cGVvZlwiOiBmdW5jdGlvbih2KSB7IHJldHVybiB0eXBlb2YgdjsgfSxcbiAgXCJ2b2lkXCI6IGZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZXZhbEJpbmFyeTogZnVuY3Rpb24ob3AsIGxlZnQsIHJpZ2h0KSB7XG4gICAgcmV0dXJuIEJpbmFyeUp1bXBUYWJsZVtvcF0obGVmdCwgcmlnaHQpO1xuICB9LFxuXG4gIGV2YWxVbmFyeTogZnVuY3Rpb24ob3AsIGxlZnQpIHtcbiAgICByZXR1cm4gVW5hcnlKdW1wVGFibGVbb3BdKGxlZnQpO1xuICB9XG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./evaluationHelper.js\n");

/***/ }),

/***/ "./hook.js":
/*!*****************!*\
  !*** ./hook.js ***!
  \*****************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Analyzer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Analyzer.js */ \"./Analyzer.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./util.js\");\n/*\nCopyright (C) 2020  Marius Steffens, CISPA\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n// restrict the page to use history to circumvent navigation lock\nwindow.history.back = () => {\n};\nwindow.history.forward = () => {\n};\n\n(function () {\n  let old_handler = window.addEventListener;\n  window.addEventListener = function (ev, fun) {\n    if (ev === 'message') {\n      old_handler.apply(window, arguments);\n      if (typeof fun !== 'function' || Object(_Analyzer_js__WEBPACK_IMPORTED_MODULE_0__[\"isNativeFunc\"])(fun)) {\n        return\n      }\n      let p = window.__shouldAnalyzeHandler(window.__getContextUrl(window), Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getFunctionString\"])(fun));\n      p.then(function (handler_id) {\n        console.error('analyzing handler with id', handler_id);\n        if (handler_id) {\n          // this means that the handler was not yet found for this host combination so we should analyze it\n          Object(_Analyzer_js__WEBPACK_IMPORTED_MODULE_0__[\"analyzeHandler\"])(fun, handler_id);\n        }\n      });\n    }\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ob29rLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUE1BbmFseXplci8uL2hvb2suanM/MWJhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IChDKSAyMDIwICBNYXJpdXMgU3RlZmZlbnMsIENJU1BBXG5cblRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG5UaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5cbmltcG9ydCB7YW5hbHl6ZUhhbmRsZXIsIGlzTmF0aXZlRnVuY30gZnJvbSBcIi4vQW5hbHl6ZXIuanNcIjtcbmltcG9ydCB7Z2V0RnVuY3Rpb25TdHJpbmd9IGZyb20gXCIuL3V0aWxcIjtcblxuLy8gcmVzdHJpY3QgdGhlIHBhZ2UgdG8gdXNlIGhpc3RvcnkgdG8gY2lyY3VtdmVudCBuYXZpZ2F0aW9uIGxvY2tcbndpbmRvdy5oaXN0b3J5LmJhY2sgPSAoKSA9PiB7XG59O1xud2luZG93Lmhpc3RvcnkuZm9yd2FyZCA9ICgpID0+IHtcbn07XG5cbihmdW5jdGlvbiAoKSB7XG4gIGxldCBvbGRfaGFuZGxlciA9IHdpbmRvdy5hZGRFdmVudExpc3RlbmVyO1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uIChldiwgZnVuKSB7XG4gICAgaWYgKGV2ID09PSAnbWVzc2FnZScpIHtcbiAgICAgIG9sZF9oYW5kbGVyLmFwcGx5KHdpbmRvdywgYXJndW1lbnRzKTtcbiAgICAgIGlmICh0eXBlb2YgZnVuICE9PSAnZnVuY3Rpb24nIHx8IGlzTmF0aXZlRnVuYyhmdW4pKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgbGV0IHAgPSB3aW5kb3cuX19zaG91bGRBbmFseXplSGFuZGxlcih3aW5kb3cuX19nZXRDb250ZXh0VXJsKHdpbmRvdyksIGdldEZ1bmN0aW9uU3RyaW5nKGZ1bikpO1xuICAgICAgcC50aGVuKGZ1bmN0aW9uIChoYW5kbGVyX2lkKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ2FuYWx5emluZyBoYW5kbGVyIHdpdGggaWQnLCBoYW5kbGVyX2lkKTtcbiAgICAgICAgaWYgKGhhbmRsZXJfaWQpIHtcbiAgICAgICAgICAvLyB0aGlzIG1lYW5zIHRoYXQgdGhlIGhhbmRsZXIgd2FzIG5vdCB5ZXQgZm91bmQgZm9yIHRoaXMgaG9zdCBjb21iaW5hdGlvbiBzbyB3ZSBzaG91bGQgYW5hbHl6ZSBpdFxuICAgICAgICAgIGFuYWx5emVIYW5kbGVyKGZ1biwgaGFuZGxlcl9pZCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufSkoKTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./hook.js\n");

/***/ }),

/***/ "./util.js":
/*!*****************!*\
  !*** ./util.js ***!
  \*****************/
/*! exports provided: makeProxy, deepClone, deepCloneMap, deepCloneProxy, randomString, delay, deProxifyArguments, isProxy, getFunctionString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeProxy\", function() { return makeProxy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deepClone\", function() { return deepClone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deepCloneMap\", function() { return deepCloneMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deepCloneProxy\", function() { return deepCloneProxy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"randomString\", function() { return randomString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"delay\", function() { return delay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deProxifyArguments\", function() { return deProxifyArguments; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isProxy\", function() { return isProxy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFunctionString\", function() { return getFunctionString; });\n/*\nCopyright (C) 2020  Marius Steffens, CISPA\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nfunction makeProxy(obj, identifier, appliedOperations = [], isRealValue = false) {\n  // Wrap a primitive type to be proxy compatible\n  if (typeof obj !== 'object' || obj === null) {\n    obj = {\"__is_primitive_value\": true, \"__real_primitive_value\": obj}\n  }\n  obj.__identifier = identifier;\n  if (obj.__applied_ops) {\n    obj.__applied_ops = obj.__applied_ops.concat(appliedOperations);\n  } else {\n    obj.__applied_ops = appliedOperations;\n  }\n\n  let handler = {\n    get: function (target, key, receiver) {\n      if (typeof obj === 'object' && Object.keys(target).length === 2 && '__identifier' in target && '__applied_ops' in target) {\n        // This means we are uncertain whether this thing here is really a object or if it is supposed to be e.g. a string\n        if (key === Symbol.iterator) {\n          window.__addTypeInfo(identifier, 'array');\n          // this should work for array usage as well as dict usage\n          obj.__is_primitive_value = true;\n          obj.__real_primitive_value = [];\n          obj[Symbol.iterator] = function* () {\n            let i = 0;\n            while (i < 5) {\n              let ops = deepClone(appliedOperations);\n              ops.push({'type': 'iterator', 'accessed_elem': i++});\n              yield makeProxy({}, identifier, ops);\n            }\n            yield undefined\n          };\n        } else if (key in String.prototype) {\n          // guess that this should in fact not be a object but rather a string. thus adapt it to be a primitive object.\n          obj.__is_primitive_value = true;\n          obj.__real_primitive_value = '';\n        } else if (key in Number.prototype) {\n          // guess that this should in fact not be a object but rather a string. thus adapt it to be a primitive object.\n          obj.__is_primitive_value = true;\n          obj.__real_primitive_value = '';\n        }\n\n      }\n      if (key === '__is_real_value') {\n        return isRealValue;\n      }\n      if (key === '__get_identifier') {\n        return identifier;\n      }\n      if (key === '__get_ops') {\n        return appliedOperations;\n      }\n      if (key === '__get_real_obj') {\n        if (target.__is_primitive_value) {\n          return target.__real_primitive_value;\n        }\n        return target;\n      }\n      if (key === '__is_proxy') {\n        return true;\n      }\n      if (typeof key === 'symbol') {\n        return target[key];\n      }\n      let accessed;\n\n      if (key === 'valueOf' || key === 'toString' && this.__is_primitive_value) {\n        return () => {\n          return this.__real_primitive_value;\n        }\n      }\n\n      if (target[\"__is_primitive_value\"]) {\n        target = target[\"__real_primitive_value\"];\n        accessed = target[key];\n\n      } else {\n        accessed = Reflect.get(target, key, receiver);\n      }\n\n      //if (accessed === undefined) {\n      //  return undefined;\n      //}\n      // TODO: check if accessed is undefined and handle this appropriately\n\n      // We need this for implicit conversion, e.g. when == is used and types missmatch since our values will always be proxies and does provoke implicit conversions.\n      // However we do not want to loose precision, when toString is called by the developer which is why we retaint it after a function call to toString or valueOf\n      if (key === 'valueOf' || key === 'toString') {\n        return function () {\n          /*ignore_this_func*/\n          return accessed.apply(target, arguments);\n        }\n      }\n      if (typeof accessed === 'function') {\n        return function () {\n          return accessed.apply(target, arguments);\n        }\n      } else {\n        // this is the case when we retrieve a property, we want to note that we are now accessing a sub property and\n        // if (accessed === undefined && identifier === 'event') {\n        //   return undefined\n        // }\n        if (accessed === undefined) {\n          target[key] = {};\n          accessed = target[key];\n        }\n        if (isProxy(accessed)) {\n          return accessed;\n        }\n        return makeProxy(accessed, identifier + '.' + key.toString(), [{\n          type: 'ops_on_parent_element',\n          old_identifier: identifier,\n          old_ops: deepClone(appliedOperations)\n        }]);\n      }\n    },\n\n    set: function (target, key, value, receiver) {\n      console.log('setting', key, 'to', value, 'on', target);\n      return Reflect.set(target, key, value, receiver);\n    }\n  };\n  return new Proxy(obj, handler);\n}\n\nfunction deepCloneMap(map) {\n  let m = new Map();\n\n  for (const [key, value] of map.entries()) {\n    m.set(key, deepClone(value));\n  }\n  return m;\n}\n\nfunction deepClone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nfunction deepCloneProxy(proxy) {\n  let identifier = proxy.__get_identifier;\n  let last_ops = proxy.__get_ops;\n  let real_value = proxy.__get_real_obj;\n\n  return {identifier: identifier, ops: last_ops, value: real_value}\n}\n\nfunction randomString(length = 20) {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let res = '';\n  for (let i = 0; i < length; i++)\n    res += chars.charAt(Math.floor(Math.random() * chars.length));\n  return res;\n}\n\n\nfunction delay(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\n\nfunction deProxifyArguments(args) {\n  let res;\n  if (Array.isArray(args)) {\n    res = [];\n    for (let arg of args) {\n      arg = deProxifyArguments(arg);\n      res.push(arg);\n    }\n  } else if (args === undefined) {\n\n  } else if (isProxy(args)) {\n    res = {ops: args.__get_ops, identifier: args.__get_identifier};\n  } else if (args.__proto__ === RegExp.prototype) {\n    let regex = args.toString();\n    res = regex.slice(1).slice(0, regex.lastIndexOf('/') - 1)\n  } else {\n    res = args;\n  }\n\n  return res\n}\n\nfunction isProxy(obj) {\n  if (obj === window || obj === parent || obj === window.opener) {\n    return false\n  }\n  return obj !== null && typeof obj === 'object' && obj.__is_proxy;\n}\n\nfunction getFunctionString(fun) {\n  return (function () {\n  }).toString.apply(fun);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUE1BbmFseXplci8uL3V0aWwuanM/OTQxNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IChDKSAyMDIwICBNYXJpdXMgU3RlZmZlbnMsIENJU1BBXG5cblRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG5UaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5cbmZ1bmN0aW9uIG1ha2VQcm94eShvYmosIGlkZW50aWZpZXIsIGFwcGxpZWRPcGVyYXRpb25zID0gW10sIGlzUmVhbFZhbHVlID0gZmFsc2UpIHtcbiAgLy8gV3JhcCBhIHByaW1pdGl2ZSB0eXBlIHRvIGJlIHByb3h5IGNvbXBhdGlibGVcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8IG9iaiA9PT0gbnVsbCkge1xuICAgIG9iaiA9IHtcIl9faXNfcHJpbWl0aXZlX3ZhbHVlXCI6IHRydWUsIFwiX19yZWFsX3ByaW1pdGl2ZV92YWx1ZVwiOiBvYmp9XG4gIH1cbiAgb2JqLl9faWRlbnRpZmllciA9IGlkZW50aWZpZXI7XG4gIGlmIChvYmouX19hcHBsaWVkX29wcykge1xuICAgIG9iai5fX2FwcGxpZWRfb3BzID0gb2JqLl9fYXBwbGllZF9vcHMuY29uY2F0KGFwcGxpZWRPcGVyYXRpb25zKTtcbiAgfSBlbHNlIHtcbiAgICBvYmouX19hcHBsaWVkX29wcyA9IGFwcGxpZWRPcGVyYXRpb25zO1xuICB9XG5cbiAgbGV0IGhhbmRsZXIgPSB7XG4gICAgZ2V0OiBmdW5jdGlvbiAodGFyZ2V0LCBrZXksIHJlY2VpdmVyKSB7XG4gICAgICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiYgT2JqZWN0LmtleXModGFyZ2V0KS5sZW5ndGggPT09IDIgJiYgJ19faWRlbnRpZmllcicgaW4gdGFyZ2V0ICYmICdfX2FwcGxpZWRfb3BzJyBpbiB0YXJnZXQpIHtcbiAgICAgICAgLy8gVGhpcyBtZWFucyB3ZSBhcmUgdW5jZXJ0YWluIHdoZXRoZXIgdGhpcyB0aGluZyBoZXJlIGlzIHJlYWxseSBhIG9iamVjdCBvciBpZiBpdCBpcyBzdXBwb3NlZCB0byBiZSBlLmcuIGEgc3RyaW5nXG4gICAgICAgIGlmIChrZXkgPT09IFN5bWJvbC5pdGVyYXRvcikge1xuICAgICAgICAgIHdpbmRvdy5fX2FkZFR5cGVJbmZvKGlkZW50aWZpZXIsICdhcnJheScpO1xuICAgICAgICAgIC8vIHRoaXMgc2hvdWxkIHdvcmsgZm9yIGFycmF5IHVzYWdlIGFzIHdlbGwgYXMgZGljdCB1c2FnZVxuICAgICAgICAgIG9iai5fX2lzX3ByaW1pdGl2ZV92YWx1ZSA9IHRydWU7XG4gICAgICAgICAgb2JqLl9fcmVhbF9wcmltaXRpdmVfdmFsdWUgPSBbXTtcbiAgICAgICAgICBvYmpbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBsZXQgaSA9IDA7XG4gICAgICAgICAgICB3aGlsZSAoaSA8IDUpIHtcbiAgICAgICAgICAgICAgbGV0IG9wcyA9IGRlZXBDbG9uZShhcHBsaWVkT3BlcmF0aW9ucyk7XG4gICAgICAgICAgICAgIG9wcy5wdXNoKHsndHlwZSc6ICdpdGVyYXRvcicsICdhY2Nlc3NlZF9lbGVtJzogaSsrfSk7XG4gICAgICAgICAgICAgIHlpZWxkIG1ha2VQcm94eSh7fSwgaWRlbnRpZmllciwgb3BzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHlpZWxkIHVuZGVmaW5lZFxuICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5IGluIFN0cmluZy5wcm90b3R5cGUpIHtcbiAgICAgICAgICAvLyBndWVzcyB0aGF0IHRoaXMgc2hvdWxkIGluIGZhY3Qgbm90IGJlIGEgb2JqZWN0IGJ1dCByYXRoZXIgYSBzdHJpbmcuIHRodXMgYWRhcHQgaXQgdG8gYmUgYSBwcmltaXRpdmUgb2JqZWN0LlxuICAgICAgICAgIG9iai5fX2lzX3ByaW1pdGl2ZV92YWx1ZSA9IHRydWU7XG4gICAgICAgICAgb2JqLl9fcmVhbF9wcmltaXRpdmVfdmFsdWUgPSAnJztcbiAgICAgICAgfSBlbHNlIGlmIChrZXkgaW4gTnVtYmVyLnByb3RvdHlwZSkge1xuICAgICAgICAgIC8vIGd1ZXNzIHRoYXQgdGhpcyBzaG91bGQgaW4gZmFjdCBub3QgYmUgYSBvYmplY3QgYnV0IHJhdGhlciBhIHN0cmluZy4gdGh1cyBhZGFwdCBpdCB0byBiZSBhIHByaW1pdGl2ZSBvYmplY3QuXG4gICAgICAgICAgb2JqLl9faXNfcHJpbWl0aXZlX3ZhbHVlID0gdHJ1ZTtcbiAgICAgICAgICBvYmouX19yZWFsX3ByaW1pdGl2ZV92YWx1ZSA9ICcnO1xuICAgICAgICB9XG5cbiAgICAgIH1cbiAgICAgIGlmIChrZXkgPT09ICdfX2lzX3JlYWxfdmFsdWUnKSB7XG4gICAgICAgIHJldHVybiBpc1JlYWxWYWx1ZTtcbiAgICAgIH1cbiAgICAgIGlmIChrZXkgPT09ICdfX2dldF9pZGVudGlmaWVyJykge1xuICAgICAgICByZXR1cm4gaWRlbnRpZmllcjtcbiAgICAgIH1cbiAgICAgIGlmIChrZXkgPT09ICdfX2dldF9vcHMnKSB7XG4gICAgICAgIHJldHVybiBhcHBsaWVkT3BlcmF0aW9ucztcbiAgICAgIH1cbiAgICAgIGlmIChrZXkgPT09ICdfX2dldF9yZWFsX29iaicpIHtcbiAgICAgICAgaWYgKHRhcmdldC5fX2lzX3ByaW1pdGl2ZV92YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB0YXJnZXQuX19yZWFsX3ByaW1pdGl2ZV92YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ19faXNfcHJveHknKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBrZXkgPT09ICdzeW1ib2wnKSB7XG4gICAgICAgIHJldHVybiB0YXJnZXRba2V5XTtcbiAgICAgIH1cbiAgICAgIGxldCBhY2Nlc3NlZDtcblxuICAgICAgaWYgKGtleSA9PT0gJ3ZhbHVlT2YnIHx8IGtleSA9PT0gJ3RvU3RyaW5nJyAmJiB0aGlzLl9faXNfcHJpbWl0aXZlX3ZhbHVlKSB7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX19yZWFsX3ByaW1pdGl2ZV92YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAodGFyZ2V0W1wiX19pc19wcmltaXRpdmVfdmFsdWVcIl0pIHtcbiAgICAgICAgdGFyZ2V0ID0gdGFyZ2V0W1wiX19yZWFsX3ByaW1pdGl2ZV92YWx1ZVwiXTtcbiAgICAgICAgYWNjZXNzZWQgPSB0YXJnZXRba2V5XTtcblxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYWNjZXNzZWQgPSBSZWZsZWN0LmdldCh0YXJnZXQsIGtleSwgcmVjZWl2ZXIpO1xuICAgICAgfVxuXG4gICAgICAvL2lmIChhY2Nlc3NlZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIC8vfVxuICAgICAgLy8gVE9ETzogY2hlY2sgaWYgYWNjZXNzZWQgaXMgdW5kZWZpbmVkIGFuZCBoYW5kbGUgdGhpcyBhcHByb3ByaWF0ZWx5XG5cbiAgICAgIC8vIFdlIG5lZWQgdGhpcyBmb3IgaW1wbGljaXQgY29udmVyc2lvbiwgZS5nLiB3aGVuID09IGlzIHVzZWQgYW5kIHR5cGVzIG1pc3NtYXRjaCBzaW5jZSBvdXIgdmFsdWVzIHdpbGwgYWx3YXlzIGJlIHByb3hpZXMgYW5kIGRvZXMgcHJvdm9rZSBpbXBsaWNpdCBjb252ZXJzaW9ucy5cbiAgICAgIC8vIEhvd2V2ZXIgd2UgZG8gbm90IHdhbnQgdG8gbG9vc2UgcHJlY2lzaW9uLCB3aGVuIHRvU3RyaW5nIGlzIGNhbGxlZCBieSB0aGUgZGV2ZWxvcGVyIHdoaWNoIGlzIHdoeSB3ZSByZXRhaW50IGl0IGFmdGVyIGEgZnVuY3Rpb24gY2FsbCB0byB0b1N0cmluZyBvciB2YWx1ZU9mXG4gICAgICBpZiAoa2V5ID09PSAndmFsdWVPZicgfHwga2V5ID09PSAndG9TdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgLyppZ25vcmVfdGhpc19mdW5jKi9cbiAgICAgICAgICByZXR1cm4gYWNjZXNzZWQuYXBwbHkodGFyZ2V0LCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGFjY2Vzc2VkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGFjY2Vzc2VkLmFwcGx5KHRhcmdldCwgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gdGhpcyBpcyB0aGUgY2FzZSB3aGVuIHdlIHJldHJpZXZlIGEgcHJvcGVydHksIHdlIHdhbnQgdG8gbm90ZSB0aGF0IHdlIGFyZSBub3cgYWNjZXNzaW5nIGEgc3ViIHByb3BlcnR5IGFuZFxuICAgICAgICAvLyBpZiAoYWNjZXNzZWQgPT09IHVuZGVmaW5lZCAmJiBpZGVudGlmaWVyID09PSAnZXZlbnQnKSB7XG4gICAgICAgIC8vICAgcmV0dXJuIHVuZGVmaW5lZFxuICAgICAgICAvLyB9XG4gICAgICAgIGlmIChhY2Nlc3NlZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSB7fTtcbiAgICAgICAgICBhY2Nlc3NlZCA9IHRhcmdldFtrZXldO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1Byb3h5KGFjY2Vzc2VkKSkge1xuICAgICAgICAgIHJldHVybiBhY2Nlc3NlZDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWFrZVByb3h5KGFjY2Vzc2VkLCBpZGVudGlmaWVyICsgJy4nICsga2V5LnRvU3RyaW5nKCksIFt7XG4gICAgICAgICAgdHlwZTogJ29wc19vbl9wYXJlbnRfZWxlbWVudCcsXG4gICAgICAgICAgb2xkX2lkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgICAgb2xkX29wczogZGVlcENsb25lKGFwcGxpZWRPcGVyYXRpb25zKVxuICAgICAgICB9XSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHNldDogZnVuY3Rpb24gKHRhcmdldCwga2V5LCB2YWx1ZSwgcmVjZWl2ZXIpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdzZXR0aW5nJywga2V5LCAndG8nLCB2YWx1ZSwgJ29uJywgdGFyZ2V0KTtcbiAgICAgIHJldHVybiBSZWZsZWN0LnNldCh0YXJnZXQsIGtleSwgdmFsdWUsIHJlY2VpdmVyKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBuZXcgUHJveHkob2JqLCBoYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gZGVlcENsb25lTWFwKG1hcCkge1xuICBsZXQgbSA9IG5ldyBNYXAoKTtcblxuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBtYXAuZW50cmllcygpKSB7XG4gICAgbS5zZXQoa2V5LCBkZWVwQ2xvbmUodmFsdWUpKTtcbiAgfVxuICByZXR1cm4gbTtcbn1cblxuZnVuY3Rpb24gZGVlcENsb25lKG9iaikge1xuICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmopKTtcbn1cblxuZnVuY3Rpb24gZGVlcENsb25lUHJveHkocHJveHkpIHtcbiAgbGV0IGlkZW50aWZpZXIgPSBwcm94eS5fX2dldF9pZGVudGlmaWVyO1xuICBsZXQgbGFzdF9vcHMgPSBwcm94eS5fX2dldF9vcHM7XG4gIGxldCByZWFsX3ZhbHVlID0gcHJveHkuX19nZXRfcmVhbF9vYmo7XG5cbiAgcmV0dXJuIHtpZGVudGlmaWVyOiBpZGVudGlmaWVyLCBvcHM6IGxhc3Rfb3BzLCB2YWx1ZTogcmVhbF92YWx1ZX1cbn1cblxuZnVuY3Rpb24gcmFuZG9tU3RyaW5nKGxlbmd0aCA9IDIwKSB7XG4gIGNvbnN0IGNoYXJzID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5JztcbiAgbGV0IHJlcyA9ICcnO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKVxuICAgIHJlcyArPSBjaGFycy5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcnMubGVuZ3RoKSk7XG4gIHJldHVybiByZXM7XG59XG5cblxuZnVuY3Rpb24gZGVsYXkodGltZW91dCkge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICBzZXRUaW1lb3V0KHJlc29sdmUsIHRpbWVvdXQpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gZGVQcm94aWZ5QXJndW1lbnRzKGFyZ3MpIHtcbiAgbGV0IHJlcztcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJncykpIHtcbiAgICByZXMgPSBbXTtcbiAgICBmb3IgKGxldCBhcmcgb2YgYXJncykge1xuICAgICAgYXJnID0gZGVQcm94aWZ5QXJndW1lbnRzKGFyZyk7XG4gICAgICByZXMucHVzaChhcmcpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChhcmdzID09PSB1bmRlZmluZWQpIHtcblxuICB9IGVsc2UgaWYgKGlzUHJveHkoYXJncykpIHtcbiAgICByZXMgPSB7b3BzOiBhcmdzLl9fZ2V0X29wcywgaWRlbnRpZmllcjogYXJncy5fX2dldF9pZGVudGlmaWVyfTtcbiAgfSBlbHNlIGlmIChhcmdzLl9fcHJvdG9fXyA9PT0gUmVnRXhwLnByb3RvdHlwZSkge1xuICAgIGxldCByZWdleCA9IGFyZ3MudG9TdHJpbmcoKTtcbiAgICByZXMgPSByZWdleC5zbGljZSgxKS5zbGljZSgwLCByZWdleC5sYXN0SW5kZXhPZignLycpIC0gMSlcbiAgfSBlbHNlIHtcbiAgICByZXMgPSBhcmdzO1xuICB9XG5cbiAgcmV0dXJuIHJlc1xufVxuXG5mdW5jdGlvbiBpc1Byb3h5KG9iaikge1xuICBpZiAob2JqID09PSB3aW5kb3cgfHwgb2JqID09PSBwYXJlbnQgfHwgb2JqID09PSB3aW5kb3cub3BlbmVyKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgcmV0dXJuIG9iaiAhPT0gbnVsbCAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJiBvYmouX19pc19wcm94eTtcbn1cblxuZnVuY3Rpb24gZ2V0RnVuY3Rpb25TdHJpbmcoZnVuKSB7XG4gIHJldHVybiAoZnVuY3Rpb24gKCkge1xuICB9KS50b1N0cmluZy5hcHBseShmdW4pO1xufVxuXG5leHBvcnQge1xuICBtYWtlUHJveHksXG4gIGRlZXBDbG9uZSxcbiAgZGVlcENsb25lTWFwLFxuICBkZWVwQ2xvbmVQcm94eSxcbiAgcmFuZG9tU3RyaW5nLFxuICBkZWxheSxcbiAgZGVQcm94aWZ5QXJndW1lbnRzLFxuICBpc1Byb3h5LFxuICBnZXRGdW5jdGlvblN0cmluZ1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./util.js\n");

/***/ })

/******/ });